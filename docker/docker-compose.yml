version: "3.9"

services:
  auth-db:
    container_name: auth-db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    networks:
      - services-network
    
  article-db:
    container_name: article-db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: articles
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    networks:
      - services-network
      
  config-service:
    container_name: config
    image: config-service:1
    healthcheck:
      test: |
        response_code=$(curl -s -o /dev/null -w "%{http_code}" --max-time 30 "http://actuatorClient:actuatorClient@config-service:8060/actuator/health");
        if [ "$response_code" -ne 200 ]; then
          echo "Error: Config Service returned HTTP $response_code"
          exit 1
        fi
      interval: 4s
      timeout: 2s
      start_period: 60s
      retries: 3
    build:
      context: ../back/fitnessServiceConfig/docker
    restart: always
    ports:
      - 8060:8060
    networks:
      - services-network
      
  discovery-service:
    container_name: discovery
    image: discovery-service:1
    healthcheck:
      test: |
        response_code=$(curl -s -o /dev/null -w "%{http_code}" --max-time 30 "http://actuatorClient:actuatorClient@discovery-service:8090/actuator/health");
        if [ "$response_code" -ne 200 ]; then
          echo "Error: Config Service returned HTTP $response_code"
          exit 1
        fi
      interval: 4s
      timeout: 2s
      start_period: 60s
      retries: 3
    depends_on:
      config-service:
          condition: service_healthy
          restart: true
    build:
      context: ../back/fitnessServiceDiscovery/docker
    ports:
      - 8090:8090
    networks:
      - services-network
            
  gateway-service:
    container_name: gateway
    image: gateway-service:1
    build:
      context: ../back/fitnessServiceGateway/docker
    restart: always
    ports:
      - 8100:8100
    depends_on:
      config-service:
          condition: service_healthy
          restart: true
      discovery-service:
          condition: service_healthy
          restart: true
    networks:
      - services-network
            
  auth-service:
    container_name: auth
    image: auth-service:1
    build:
      context: ../back/fitnessServiceAuth/docker
    restart: always
    ports:
      - 8070:8070
    depends_on:
      config-service:
          condition: service_healthy
          restart: true
      discovery-service:
          condition: service_healthy
          restart: true
    networks:
      - services-network
            
  article-service:
    container_name: article
    image: article-service:1
    build:
      context: ../back/fitnessServiceArticles/docker
    restart: always
    ports:
      - 8080:8080
    depends_on:
      config-service:
          condition: service_healthy
          restart: true
      discovery-service:
          condition: service_healthy
          restart: true
    networks:
      - services-network
            
  video-service:
    container_name: video
    image: video-service:1
    build:
      context: ../back/fitnessServiceVideo/docker
    restart: always
    ports:
      - 8110:8110
    depends_on:
      config-service:
          condition: service_healthy
          restart: true
      discovery-service:
          condition: service_healthy
          restart: true
    networks:
      - services-network
            
  chat-service:
    container_name: chat
    image: chat-service:1
    build:
      context: ../back/fitnessServiceChat/docker
    restart: always
    ports:
      - 8120:8120
    depends_on:
      config-service:
          condition: service_healthy
          restart: true
      discovery-service:
          condition: service_healthy
          restart: true
    networks:
      - services-network
            
  web-service:
    container_name: web
    image: nginx
    volumes:
      - ../back/images:/usr/share/nginx/images
      - ../static/pages:/usr/share/nginx/html:ro
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"

networks:
  services-network:
    driver: bridge