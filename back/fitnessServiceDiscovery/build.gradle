import com.bmuschko.gradle.docker.tasks.image.Dockerfile

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.bmuschko.docker-remote-api' version '9.4.0'
}

group = 'com.owl'
version = ''

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server') {
        exclude(group: 'org.springframework.cloud', module: 'spring-cloud-starter-ribbon')
        exclude(group: 'com.netflix.ribbon', module: 'ribbon-eureka')
    }
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
}

bootJar {
    destinationDirectory = file("${project.rootDir}/docker/")
}

task createDockerfile(type: Dockerfile, dependsOn: bootJar) {
    destFile = project.file("${project.rootDir}/docker/Dockerfile")
    
    from 'openjdk:17-alpine'
    copyFile "${rootProject.name}.jar", "/app/${rootProject.name}.jar"
    copyFile 'wait-for-it.sh', '/app/wait-for-it.sh'
    exposePort 8090
    runCommand('apk add --no-cache bash')
    runCommand('dos2unix /app/wait-for-it.sh && chmod +x /app/wait-for-it.sh')
    entryPoint('/bin/bash', '/app/wait-for-it.sh')
    defaultCommand(
            '--timeout=2 ', '--strict', 'config:8060',
            '--', 'java', '-jar', "/app/${rootProject.name}.jar")
}

task buildJarAndCreateDockerfile(dependsOn: [bootJar, createDockerfile])