import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.bmuschko.docker-remote-api' version '9.4.0'
}

group = 'owl.home'
version = ''

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.1")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	destinationDirectory = file("${project.rootDir}/docker/")
}

task createDockerfile(type: Dockerfile, dependsOn: bootJar) {
	destFile = project.file("${project.rootDir}/docker/Dockerfile")

	from 'openjdk:17-alpine'
	exposePort 8110
	copyFile "${rootProject.name}.jar", "/app/${rootProject.name}.jar"
	entryPoint 'java'
	defaultCommand '-jar', "/app/${rootProject.name}.jar"
	exposePort 8110
}

task buildJarAndCreateDockerfile(dependsOn: [bootJar, createDockerfile])